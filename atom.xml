<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lopoliu.github.io</id>
    <title>lopo&apos;s blog</title>
    <updated>2021-04-18T14:32:56.860Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lopoliu.github.io"/>
    <link rel="self" href="https://lopoliu.github.io/atom.xml"/>
    <subtitle>阻挡我们成功的不是失败，而是平庸</subtitle>
    <logo>https://lopoliu.github.io/images/avatar.png</logo>
    <icon>https://lopoliu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, lopo&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[vue父子组件之间的传值]]></title>
        <id>https://lopoliu.github.io/post/vue-fu-zi-zu-jian-zhi-jian-de-chuan-zhi/</id>
        <link href="https://lopoliu.github.io/post/vue-fu-zi-zu-jian-zhi-jian-de-chuan-zhi/">
        </link>
        <updated>2020-03-16T07:38:46.000Z</updated>
        <summary type="html"><![CDATA[<p>最近正在学习vue，记录一编vue中父组件向子组件传值的例子，在vue中，父子组件的关系可以总结为prop向下传递，事件向上传递。父组件通过prop给子组件下发数据，子组件通过事件给父组件发送信息</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近正在学习vue，记录一编vue中父组件向子组件传值的例子，在vue中，父子组件的关系可以总结为prop向下传递，事件向上传递。父组件通过prop给子组件下发数据，子组件通过事件给父组件发送信息</p>
<!--more-->
<h1 id="父组件数据传递到子组件">父组件数据传递到子组件</h1>
<pre><code class="language-html">&lt;!-- 子组件模板 --&gt;
&lt;template id=&quot;cpn&quot;&gt;
  &lt;!-- 使用tamplate 必须包含一个div --&gt;
  &lt;div&gt;
    &lt;!-- 在子组件中模板中使用子组件的data --&gt;
    &lt;h1&gt;{{ childmessage }}&lt;/h1&gt;
    &lt;ul&gt;
      &lt;!-- 遍历childmovies --&gt;
      &lt;li v-for=&quot;item in childmovies&quot;&gt;{{ item }}&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;!-- 父组件模板 --&gt;
&lt;div id=&quot;app&quot;&gt;
  &lt;!-- 在父组件中使用子组件，使用v-bind进行数据绑定 --&gt;
  &lt;child :childmovies=&quot;movies&quot; v-bind:childmessage=&quot;message&quot;&gt;&lt;/child&gt;
&lt;/div&gt;

&lt;script type=&quot;application/javascript&quot; src=&quot;vue.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  const app = new Vue({
    el: '#app',
    data: {
      message: 'Hello Vue',
      movies: ['python', 'java']
    },
    components: {        // 在父组件中注册局部子组件
      child: {
        template: '#cpn',       // 子组件模板
        //  子组件中通过一个props来接收父组件的数据，props可以是一个数组、也可以是一个字典
        props: ['childmovies', 'childmessage'
        ]
      }
    }
  })
&lt;/script&gt;
</code></pre>
<h1 id="子组件数据传递到父组件">子组件数据传递到父组件</h1>
<pre><code class="language-html">&lt;template id=&quot;cpn&quot;&gt;
  &lt;div&gt;
    &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;
    {{ total }}
    &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt;
  &lt;/div&gt;
&lt;/template&gt;

&lt;div id=&quot;app&quot;&gt;
  &lt;cpn @decrement=&quot;changeTotal&quot; @increment=&quot;changeTotal&quot;&gt;&lt;/cpn&gt;
&lt;/div&gt;

&lt;script type=&quot;application/javascript&quot; src=&quot;vue.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
  const app = new Vue({
    el: '#app',
    data: {
      total: 0
    },
    methods: {
      changeTotal(new_total) {
        this.total = new_total
      }
    },
    components: {
      'cpn': {
        template: '#cpn',
        data() {
          return {
            total: 0
          }
        },
        methods: {
          increment() {
            this.total++
            this.$emit('decrement', this.total)
          },
          decrement() {
            this.total--
            this.$emit('increment', this.total)
          }
        }
      }
    }
  })
&lt;/script&gt;
</code></pre>
]]></content>
    </entry>
</feed>