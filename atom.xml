<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lopoliu.github.io</id>
    <title>lopo&apos;s blog</title>
    <updated>2021-04-18T07:28:55.011Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lopoliu.github.io"/>
    <link rel="self" href="https://lopoliu.github.io/atom.xml"/>
    <subtitle>阻挡我们成功的不是失败，而是平庸</subtitle>
    <logo>https://lopoliu.github.io/images/avatar.png</logo>
    <icon>https://lopoliu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, lopo&apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[docker常用命令 ]]></title>
        <id>https://lopoliu.github.io/post/docker-chang-yong-ming-ling/</id>
        <link href="https://lopoliu.github.io/post/docker-chang-yong-ming-ling/">
        </link>
        <updated>2021-04-18T07:27:19.000Z</updated>
        <content type="html"><![CDATA[<h2 id="容器管理">容器管理</h2>
<h3 id="1-run创建并启动容器">1. run创建并启动容器</h3>
<blockquote>
<p>参数选项</p>
<p>-a stdin: 指定标准输入输出内容类a型，可选 STDIN/STDOUT/STDERR 三项<br>
-d: 后台运行容器，并返回容器ID<br>
-i: 以交互模式运行容器，通常与 -t 同时使用<br>
-P: 随机端口映射，容器内部端口随机映射到主机的端口<br>
-p: 指定端口映射，格式为：主机(宿主)端口:容器端口<br>
-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；<br>
--name=&quot;nginx-lb&quot;: 为容器指定一个名称；<br>
--dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致；<br>
--dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致；<br>
-h &quot;mars&quot;: 指定容器的hostname；<br>
-e username=&quot;ritchie&quot;: 设置环境变量；<br>
--env-file=[]: 从指定文件读入环境变量；<br>
--cpuset=&quot;0-2&quot; or --cpuset=&quot;0,1,2&quot;: 绑定容器到指定CPU运行；<br>
-m :设置容器使用内存最大值；<br>
--net=&quot;bridge&quot;: 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；<br>
--link=[]: 添加链接到另一个容器；<br>
--expose=[]: 开放一个端口或一组端口；<br>
--volume , -v: 绑定一个卷</p>
</blockquote>
<h3 id="2-start-stop-restart-启动-停止-重启">2. start、stop、restart 启动、停止、重启</h3>
<blockquote>
<h2 id="start-启动已停止的容器例如-docker-start-mysql-57">start 启动已停止的容器<br>
例如: docker start mysql-5.7</h2>
<h2 id="stop-停止正在运行的容器例如-docker-stop-mysql-57">stop 停止正在运行的容器<br>
例如: docker stop mysql-5.7</h2>
<p>restart 重新启动正在运行的容器<br>
例如: docker restart mysql-5.7</p>
</blockquote>
<h3 id="3-rm-删除一个容器">3. rm 删除一个容器</h3>
<blockquote>
<p>-f :通过 SIGKILL 信号强制删除一个运行中的容器。<br>
例如: docker rm -f mysql-5.7</p>
</blockquote>
<h3 id="4-exec进入容器">4. exec进入容器</h3>
<blockquote>
<p>runoob@runoob:~$ docker exec -it mysql-5.7</p>
</blockquote>
<h3 id="5-create创建容器与run命令相同用法但只创建不会启动容器">5. create创建容器，与run命令相同用法，但只创建不会启动容器</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://lopoliu.github.io/post/hello-gridea/</id>
        <link href="https://lopoliu.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>